{"version":3,"sources":["../../../projects/ngw-core/src/lib/services/helper.service.ts","../../../projects/ngw-core/src/lib/directive/regular/bg-color.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/border.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/ellipsis.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/fit.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/font-size.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/font-weight.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/gradient-bg-color.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/height.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/margin.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/padding.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/position.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/radius.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/shadow.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/text-color.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/width.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/bg-color.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/border.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/font-size.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/font-weight.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/height.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/margin.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/padding.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/radius.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/shadow.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/text-color.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/width.hover.directive.ts","../../../projects/ngw-core/src/lib/layouts/row.directive.ts","../../../projects/ngw-core/src/lib/layouts/col.directive.ts","../../../projects/ngw-core/src/lib/layouts/align.directive.ts","../../../projects/ngw-core/src/lib/elements/ngw-btn.directive.ts","../../../projects/ngw-core/src/lib/elements/ngw-form-control.directive.ts","../../../projects/ngw-core/src/lib/elements/ngw-typo.directive.ts","../../../projects/ngw-core/src/lib/ngw-core.module.ts"],"names":["HelperService","this","themeColors","defaultColor","prototype","sanitizeThemeColor","color","indexOf","toLowerCase","sanitizeColor","colorLC","find","tc","applyStyle","el","propertyName","propertyValue","nativeElement","style","sanitizeAndApplyStyle","getStyleObject","props","styleObj","forEach","prop","i","setStyleObject","sanitizeShadowValue","shadow","factory","ɵfac","Injectable","BgColorDirective","helper","bgColor","ngOnChanges","changes","apply","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs","features","ɵɵNgOnChangesFeature","Directive","selector","Input","BorderDirective","border","borderWidth","borderColor","borderStyle","EllipsisDirective","ngAfterViewInit","classList","add","FitDirective","fit","FontSizeDirective","fontSize","FontWeightDirective","fontWeight","GradientBgColorDirective","gradientBgColor","biValue","HeightDirective","height","MarginDirective","margin","marginTop","marginLeft","marginBottom","marginRight","marginX","marginY","PaddingDirective","padding","paddingTop","paddingLeft","paddingBottom","paddingRight","paddingX","paddingY","PositionDirective","position","RadiusDirective","radius","radiusTopLeft","radiusTopRight","radiusBottomLeft","radiusBottomRight","ShadowDirective","shdowToApply","TextColorDirective","textColor","WidthDirective","width","BgColorHoverDirective","hoverBgColor","propertiesToSet","backupValues","onMouseEnter","onMouseLeave","hostBindings","rf","ctx","HostListener","BorderHoverDirective","hoverBorder","hoverBorderWidth","hoverBorderColor","hoverBorderStyle","FontSizeHoverDirective","hoverFontSize","FontWeightHoverDirective","propValue","HeightHoverDirective","MarginHoverDirective","hoverMargin","hoverMarginTop","hoverMarginLeft","hoverMarginBottom","hoverMarginRight","hoverMarginX","hoverMarginY","PaddingHoverDirective","hoverpadding","hoverpaddingTop","hoverpaddingLeft","hoverpaddingBottom","hoverpaddingRight","hoverpaddingX","hoverpaddingY","RadiusHoverDirective","hoverRadius","hoverRadiusTopLeft","hoverRadiusTopRight","hoverRadiusBottomLeft","hoverRadiusBottomRight","ShadowHoverDirective","TextColorHoverDirective","WidthHoverDirective","RowDirective","ColDirective","col","colLg","colMd","colSm","ngOnInit","_this","observer","ResizeObserver","entries","contentRect","bodyEle","document","getElementsByTagName","observe","window","innerWidth","ngOnDestroy","_a","unObserve","e","styleToApply","toLocaleLowerCase","includes","console","warn","AlignDirective","align","alignX","alignY","alignVal","jc","ai","NgwBtnDirective","type","themeColor","themeColorText","textColorClass","themeTextColorClass","bgColorClass","hoverBgColorClass","borderColorClass","hoverBorderColorClass","hoverLightBgColorClass","NgwFormControlDirective","map","c","remove","sanitizedColor","NgwTypoDirective","muted","undefined","toString","componentsList","NgwCoreModule","setupNgw","head","createElement","appendChild","createTextNode","colors","configObj","colorClassCss","colorCode","documentElement","setProperty","getColorCss","_b","configure","config","isValidConfigObj","default","primary","ngModule","cssVarName","className","darkMode","50","100","200","300","400","500","600","700","800","900","contrast","secondary","success","warning","error","imports","declarations","exports","NgModule","providers"],"mappings":"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AM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,SAAW,QAEbG,QAAW,CACTb,GAAK,UACLC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,SAAW,QAEbI,MAAS,CACPd,GAAK,UACLC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,IAAM,UACNC,SAAW,2CAjFNjC,oCAAAA,yCALD,CACRtM,GACD4O,QAAA,CAHQ,uEAMEtC,EAAa,CAAAuC,aAAA,CA1CxB7M,EACAgB,EACAK,EACAI,EACAE,EACAE,EACAE,EACAG,EACAE,EACAQ,EACAQ,EACAE,EACAM,EACAE,EACAE,EACAE,EACAU,EACAK,EACAE,EACAE,EACAC,EACAQ,EACAQ,EACAM,EACAC,EACAC,EACAC,EACAC,EACA0B,EACAO,EACAW,EACAK,GAAgB6C,QAAA,CA/BhB9M,EACAgB,EACAK,EACAI,EACAE,EACAE,EACAE,EACAG,EACAE,EACAQ,EACAQ,EACAE,EACAM,EACAE,EACAE,EACAE,EACAU,EACAK,EACAE,EACAE,EACAC,EACAQ,EACAQ,EACAM,EACAC,EACAC,EACAC,EACAC,EACA0B,EACAO,EACAW,EACAK,qEAWWK,EAAa,CAAA,MARzByC,EAAAA,eAAS,CACRF,aAAcxC,EACduC,QAAS,GACTI,UAAU,CACRhP,GAEF8O,QAAQzC","sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\nexport class HelperService {\n  themeColors = ['default','primary','secondary','success','error','warning'];\n  defaultColor = this.themeColors[0];\n  constructor() { }\n\n  /**\n   * checks if the given theme color is valid theme color or not, if invalid returns default theme color\n   * @param color theme color to be validated\n   * @returns returns a valid theme color, if invalid returns 'default'\n   */\n  sanitizeThemeColor(color:string):string{\n    return this.themeColors.indexOf(color.toLowerCase()) > -1 ? color.toLowerCase() : this.defaultColor;\n  }\n  /**\n   * returns the css color variable for the theme color(default,primary...) otherwise returns the same value\n   * @param color color to be sanitized\n   * @returns sanitized color\n   */\n  sanitizeColor(color:string):string{\n    let colorLC = color ? color.toLowerCase() : '';\n    let themeColor = this.themeColors.find((tc)=>{\n      return colorLC.indexOf(tc) >=0;\n    });\n    return themeColor ? `var(--ngw-${colorLC})` : colorLC;\n  }\n   /**\n   * Apply the given style poperty to given element. \n   * @param el Element for which style needs to be applied\n   * @param propertyName style porperty that needs to be set\n   * @param propertyValue style value that need to be set\n   */\n    applyStyle(el:ElementRef,propertyName:string,propertyValue:string){\n      el.nativeElement.style[propertyName] = propertyValue;\n    }\n  /**\n   * sanitize and Apply the given style poperty to given element. \n   * @param el Element for which style needs to be applied\n   * @param propertyName style porperty that needs to be set\n   * @param propertyValue style value that need to be set\n   */\n  sanitizeAndApplyStyle(el:ElementRef,propertyName:string,propertyValue:string){\n    el.nativeElement.style[propertyName] = this.sanitizeColor(propertyValue);\n  }\n\n  /**\n   * Extracts and returns CSS style obj for given css properties from the given HTML Element\n   * @param el Element from which styles needs to be extracted\n   * @param props Style properties to be extracted\n   * @returns style object for given style properties\n   */\n  getStyleObject(el:ElementRef,props:string[]){\n    let styleObj = {};\n    props.forEach((prop,i)=>{\n      styleObj[prop] = el.nativeElement.style[prop];\n    });\n    return styleObj;\n  }\n\n  /**\n   * sets the style of the HTML element with given style\n   * @param el HTML element for which style needs to be set\n   * @param props set of CSS style proeprties\n   * @param styleObj CSS styles with values to be set\n   */\n  setStyleObject(el:ElementRef,props:string[],styleObj:any){\n    props.forEach((prop,i)=>{\n      el.nativeElement.style[prop] = styleObj[prop];\n    });\n  }\n\n  sanitizeShadowValue(shadow:string):string{\n    let shdowToApply;\n    if(shadow ==\"1\"){\n      shdowToApply = '0 2px 1px -1px rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 1px 3px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"2\"){\n      shdowToApply = '0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"3\"){\n      shdowToApply = '0 3px 3px -2px rgb(0 0 0 / 20%), 0 3px 4px 0 rgb(0 0 0 / 14%), 0 1px 8px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"4\"){\n      shdowToApply = '0 2px 4px -1px rgb(0 0 0 / 20%), 0 4px 5px 0 rgb(0 0 0 / 14%), 0 1px 10px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"5\"){\n      shdowToApply = '0 3px 5px -1px rgb(0 0 0 / 20%), 0 5px 8px 0 rgb(0 0 0 / 14%), 0 1px 14px 0 rgb(0 0 0 / 12%)';\n    }else{\n      shdowToApply = shadow\n    }\n    return shdowToApply;\n  }\n\n\n}\n","import { Directive, ElementRef, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[bgColor]'\n})\nexport class BgColorDirective implements OnChanges {\n  @Input() bgColor='';\n  constructor(private el:ElementRef, private helper:HelperService ) { }\n  ngOnChanges(changes:any){\n    if(changes.bgColor){\n      this.apply();\n    }\n  }\n  apply(){\n    this.helper.sanitizeAndApplyStyle(this.el,'backgroundColor',this.bgColor);\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[border],[border.width],[border.color],[border.style]'\n})\nexport class BorderDirective implements OnChanges {\n  @Input('border') border = '';\n  @Input('border.width') borderWidth = '';\n  @Input('border.color') borderColor = '';\n  @Input('border.style') borderStyle = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  ngOnChanges(changes:any){\n    if(changes.border){\n      this.helper.applyStyle(this.el,'border',this.border);\n    }\n    if(changes.borderColor){\n      this.helper.sanitizeAndApplyStyle(this.el,'borderColor',this.borderColor);\n    }\n    if(changes.borderWidth){\n      this.helper.applyStyle(this.el,'borderWidth',this.borderWidth);\n    }\n    if(changes.borderStyle){\n      this.helper.applyStyle(this.el,'borderStyle',this.borderStyle);\n    }\n  }\n\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[ellipsis]'\n})\nexport class EllipsisDirective  implements AfterViewInit{\n\n  constructor(private el:ElementRef) { }\n  ngAfterViewInit(){\n    this.el.nativeElement.classList.add(\"ngw-ellipsis\");\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[fit]'\n})\nexport class FitDirective implements OnChanges {\n  @Input('fit') fit = '' //valid options : contain,cover,fill,none,scale-down\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  ngOnChanges(changes:any){\n    if(changes.fit){\n      this.helper.applyStyle(this.el,'objectFit',this.fit);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[fontSize]'\n})\nexport class FontSizeDirective implements OnChanges{\n\n  @Input('fontSize') fontSize = '';\n  \n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.fontSize){\n      this.helper.applyStyle(this.el,'fontSize',this.fontSize);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[fontWeight]'\n})\nexport class FontWeightDirective implements OnChanges{\n\n  @Input('fontWeight') fontWeight = '';\n  \n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.fontWeight){\n      this.helper.applyStyle(this.el,'fontWeight',this.fontWeight);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[gradientBgColor]'\n})\nexport class GradientBgColorDirective implements OnChanges {\n\n  @Input('gradientBgColor') gradientBgColor = '';\n  \n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.gradientBgColor){\n      this.gradientBgColor = this.helper.sanitizeThemeColor(this.gradientBgColor);\n      let biValue = `linear-gradient(to right, var(--ngw-${this.gradientBgColor}-600),var(--ngw-${this.gradientBgColor}-500),var(--ngw-${this.gradientBgColor}-400,rgba(91,33,182,0)))`;\n      this.helper.applyStyle(this.el,'backgroundImage',biValue);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[height]'\n})\nexport class HeightDirective implements OnChanges {\n  @Input('height') height = '';\n\n  constructor(private el:ElementRef, private helper:HelperService) { }\n  \n  ngOnChanges(changes:any) {\n    if(changes.height){\n      this.helper.applyStyle(this.el,'height',this.height);\n    }\n  }\n\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[margin],[margin.top],[margin.left],[margin.bottom],[margin.right],[margin.x],[margin.y]'\n})\nexport class MarginDirective implements OnChanges {\n\n  @Input('margin')        margin = '';\n  @Input('margin.top')    marginTop = '';\n  @Input('margin.left')   marginLeft = '';\n  @Input('margin.bottom') marginBottom = '';\n  @Input('margin.right')  marginRight = '';\n  @Input('margin.x')      marginX = '';\n  @Input('margin.y')      marginY = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n\n    if(changes.margin){\n      this.helper.applyStyle(this.el,'margin',this.margin);\n    }\n\n    if(changes.marginTop){\n      this.helper.applyStyle(this.el,'marginTop',this.marginTop);\n    }\n\n    if(changes.marginLeft){\n      this.helper.applyStyle(this.el,'marginLeft',this.marginLeft);\n    }\n\n    if(changes.marginBottom){\n      this.helper.applyStyle(this.el,'marginBottom',this.marginBottom);\n    }\n\n    if(changes.marginRight){\n      this.helper.applyStyle(this.el,'marginRight',this.marginRight);\n    }\n    if(changes.marginX){\n      this.helper.applyStyle(this.el,'marginLeft',this.marginX);\n      this.helper.applyStyle(this.el,'marginRight',this.marginX);\n    }\n    if(changes.marginY){\n      this.helper.applyStyle(this.el,'marginTop',this.marginY);\n      this.helper.applyStyle(this.el,'marginBottom',this.marginY);\n    }\n\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[padding],[padding.top],[padding.left],[padding.bottom],[padding.right],[padding.x],[padding.y]'\n})\nexport class PaddingDirective implements OnChanges {\n\n  @Input('padding')        padding = '';\n  @Input('padding.top')    paddingTop = '';\n  @Input('padding.left')   paddingLeft = '';\n  @Input('padding.bottom') paddingBottom = '';\n  @Input('padding.right')  paddingRight = '';\n  @Input('padding.x')      paddingX = '';\n  @Input('padding.y')      paddingY = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n\n    if(changes.padding){\n      this.helper.applyStyle(this.el,'padding',this.padding);\n    }\n\n    if(changes.paddingTop){\n      this.helper.applyStyle(this.el,'paddingTop',this.paddingTop);\n    }\n\n    if(changes.paddingLeft){\n      this.helper.applyStyle(this.el,'paddingLeft',this.paddingLeft);\n    }\n\n    if(changes.paddingBottom){\n      this.helper.applyStyle(this.el,'paddingBottom',this.paddingBottom);\n    }\n\n    if(changes.paddingRight){\n      this.helper.applyStyle(this.el,'paddingRight',this.paddingRight);\n    }\n    if(changes.paddingX){\n      this.helper.applyStyle(this.el,'paddingLeft',this.paddingX);\n      this.helper.applyStyle(this.el,'paddingRight',this.paddingX);\n    }\n    if(changes.paddingY){\n      this.helper.applyStyle(this.el,'paddingTop',this.paddingY);\n      this.helper.applyStyle(this.el,'paddingBottom',this.paddingY);\n    }\n\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[position]'\n})\nexport class PositionDirective implements OnChanges {\n  @Input('position') position = '';\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  ngOnChanges(changes:any){\n    if(changes.position){\n      this.helper.applyStyle(this.el,'position',this.position);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[radius],[radius.topLeft],[radius.topRadius],[radius.bottomLeft],[radius.bottomRight]'\n})\nexport class RadiusDirective implements OnChanges {\n  @Input('radius') radius = '';\n  @Input('radius.topLeft') radiusTopLeft = '';\n  @Input('radius.topRight') radiusTopRight = '';\n  @Input('radius.bottomLeft') radiusBottomLeft = '';\n  @Input('radius.bottomRight') radiusBottomRight = '';\n  \n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  \n  ngOnChanges(changes:any){\n\n    changes.radius            ? this.helper.applyStyle(this.el,'borderRadius',this.radius) : '';\n    changes.radiusTopLeft     ? this.helper.applyStyle(this.el,'borderTopLeftRadius',this.radiusTopLeft) : '';\n    changes.radiusTopRight    ? this.helper.applyStyle(this.el,'borderTopRightRadius',this.radiusTopRight) : '';\n    changes.radiusBottomLeft  ? this.helper.applyStyle(this.el,'borderBottomLeftRadius',this.radiusBottomLeft) : '';\n    changes.radiusBottomRight ? this.helper.applyStyle(this.el,'borderBottomRightRadius',this.radiusBottomRight) : '';\n\n\n  }\n\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[shadow]'\n})\nexport class ShadowDirective implements OnChanges {\n  @Input('shadow') shadow = '';\n  \n  constructor(private el:ElementRef, private helper:HelperService) { }\n  \n  ngOnChanges(changes:any){\n    if(changes.shadow){\n     let shdowToApply = this.helper.sanitizeShadowValue(this.shadow);\n     this.helper.applyStyle(this.el,'boxShadow',shdowToApply);\n    }\n   \n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[textColor]'\n})\nexport class TextColorDirective implements OnChanges {\n  @Input('textColor') textColor = '';\n  \n  constructor(private el:ElementRef, private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    changes.textColor ? this.helper.sanitizeAndApplyStyle(this.el,'color',this.textColor) : '';\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[width]'\n})\nexport class WidthDirective implements OnChanges {\n  \n  @Input('width') width;\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    changes.width ? this.helper.applyStyle(this.el,'width',this.width) : '';\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.bgColor]'\n})\nexport class BgColorHoverDirective {\n\n  @Input('hover.bgColor') hoverBgColor = '';\n  propertiesToSet:string[] = ['backgroundColor'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.hoverBgColor){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.sanitizeAndApplyStyle(this.el,'backgroundColor',this.hoverBgColor);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.border],[hover.border.width],[hover.border.color],[hover.border.style]'\n})\nexport class BorderHoverDirective {\n\n  @Input('hover.border') hoverBorder = '';\n  @Input('hover.border.width') hoverBorderWidth = '';\n  @Input('hover.border.color') hoverBorderColor = '';\n  @Input('hover.border.style') hoverBorderStyle = '';\n\n  propertiesToSet:string[] = ['border','borderWidth','borderColor','borderStyle'];\n  backupValues:any = {}\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n    this.hoverBorder ? this.helper.applyStyle(this.el,'border',this.hoverBorder):'';\n    this.hoverBorderWidth ? this.helper.applyStyle(this.el,'borderWidth',this.hoverBorderWidth):'';\n    this.hoverBorderColor ? this.helper.sanitizeAndApplyStyle(this.el,'borderColor',this.hoverBorderColor):'';\n    this.hoverBorderStyle ? this.helper.applyStyle(this.el,'borderStyle',this.hoverBorderStyle):'';\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.fontSize]'\n})\nexport class FontSizeHoverDirective {\n\n  \n  @Input('hover.fontSize') hoverFontSize = '';\n  propertiesToSet:string[] = ['fontSize'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.hoverFontSize){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverFontSize);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.fontWeight]'\n})\nexport class FontWeightHoverDirective {\n\n  @Input('hover.fontWeight') propValue = '';\n  propertiesToSet:string[] = ['fontWeight'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.height]'\n})\nexport class HeightHoverDirective {\n\n  @Input('hover.height') propValue = '';\n  propertiesToSet:string[] = ['height'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.margin],[hover.margin.top],[hover.margin.left],[hover.margin.bottom],[hover.margin.right],[hover.margin.x],[hover.margin.y]'\n})\nexport class MarginHoverDirective {\n\n  @Input('hover.margin') hoverMargin = ''; \n  @Input('hover.margin.top') hoverMarginTop = ''; \n  @Input('hover.margin.left') hoverMarginLeft = ''; \n  @Input('hover.margin.bottom') hoverMarginBottom = ''; \n  @Input('hover.margin.right') hoverMarginRight = ''; \n  @Input('hover.margin.x') hoverMarginX = ''; \n  @Input('hover.margin.y') hoverMarginY = ''; \n\n  propertiesToSet:string[] = ['margin','marginTop','marginLeft','marginBottom','marginRight'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n\n    if(this.hoverMarginX){\n      this.hoverMarginLeft = this.hoverMarginX;\n      this.hoverMarginRight = this.hoverMarginX;\n    }\n\n    if(this.hoverMarginY){\n      this.hoverMarginTop = this.hoverMarginY;\n      this.hoverMarginBottom = this.hoverMarginY;\n    }\n\n    this.hoverMargin ? this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverMargin) : '';\n    this.hoverMarginTop ? this.helper.applyStyle(this.el,this.propertiesToSet[1],this.hoverMarginTop) : '';\n    this.hoverMarginLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[2],this.hoverMarginLeft) : '';\n    this.hoverMarginBottom ? this.helper.applyStyle(this.el,this.propertiesToSet[3],this.hoverMarginBottom) : '';\n    this.hoverMarginRight ? this.helper.applyStyle(this.el,this.propertiesToSet[4],this.hoverMarginRight) : '';\n    \n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.padding],[hover.padding.top],[hover.padding.left],[hover.padding.bottom],[hover.padding.right],[hover.padding.x],[hover.padding.y]'\n})\nexport class PaddingHoverDirective {\n\n  @Input('hover.padding') hoverpadding = ''; \n  @Input('hover.padding.top') hoverpaddingTop = ''; \n  @Input('hover.padding.left') hoverpaddingLeft = ''; \n  @Input('hover.padding.bottom') hoverpaddingBottom = ''; \n  @Input('hover.padding.right') hoverpaddingRight = ''; \n  @Input('hover.padding.x') hoverpaddingX = ''; \n  @Input('hover.padding.y') hoverpaddingY = ''; \n\n  propertiesToSet:string[] = ['padding','paddingTop','paddingLeft','paddingBottom','paddingRight'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n\n    if(this.hoverpaddingX){\n      this.hoverpaddingLeft = this.hoverpaddingX;\n      this.hoverpaddingRight = this.hoverpaddingX;\n    }\n\n    if(this.hoverpaddingY){\n      this.hoverpaddingTop = this.hoverpaddingY;\n      this.hoverpaddingBottom = this.hoverpaddingY;\n    }\n\n    this.hoverpadding ? this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverpadding) : '';\n    this.hoverpaddingTop ? this.helper.applyStyle(this.el,this.propertiesToSet[1],this.hoverpaddingTop) : '';\n    this.hoverpaddingLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[2],this.hoverpaddingLeft) : '';\n    this.hoverpaddingBottom ? this.helper.applyStyle(this.el,this.propertiesToSet[3],this.hoverpaddingBottom) : '';\n    this.hoverpaddingRight ? this.helper.applyStyle(this.el,this.propertiesToSet[4],this.hoverpaddingRight) : '';\n    \n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.radius],[hover.radius.topLeft],[hover.radius.topRight],[hover.radius.bottomLeft],[hover.radius.bottomRight]'\n})\nexport class RadiusHoverDirective {\n\n  @Input('hover.radius') hoverRadius = '';\n  @Input('hover.radius.topLeft') hoverRadiusTopLeft = '';\n  @Input('hover.radius.topRight') hoverRadiusTopRight = '';\n  @Input('hover.radius.bottomLeft') hoverRadiusBottomLeft = '';\n  @Input('hover.radius.bottomRight') hoverRadiusBottomRight = '';\n\n  propertiesToSet:string[] = ['borderRadius','borderTopLeftRadius','borderTopRightRadius','borderBottomLeftRadius','borderBottomRightRadius'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n    this.hoverRadius ? this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverRadius) : '';\n    this.hoverRadiusTopLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[1],this.hoverRadiusTopLeft) : '';\n    this.hoverRadiusTopRight ? this.helper.applyStyle(this.el,this.propertiesToSet[2],this.hoverRadiusTopRight) : '';\n    this.hoverRadiusBottomLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[3],this.hoverRadiusBottomLeft) : '';\n    this.hoverRadiusBottomRight ? this.helper.applyStyle(this.el,this.propertiesToSet[4],this.hoverRadiusBottomRight) : '';\n    \n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.shadow]'\n})\nexport class ShadowHoverDirective {\n\n  @Input('hover.shadow') propValue = '';\n  propertiesToSet:string[] = ['boxShadow'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      \n      let shdowToApply = this.helper.sanitizeShadowValue(this.propValue);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],shdowToApply);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.textColor]'\n})\nexport class TextColorHoverDirective {\n\n  @Input('hover.textColor') propValue = '';\n  propertiesToSet:string[] = ['color'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.sanitizeAndApplyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.width]'\n})\nexport class WidthHoverDirective {\n\n  @Input('hover.width') propValue = '';\n  propertiesToSet:string[] = ['width'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[row]'\n})\nexport class RowDirective implements AfterViewInit {\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngAfterViewInit(){\n    this.helper.applyStyle(this.el,'display','flex');\n    this.helper.applyStyle(this.el,'flexDirection','row');\n    this.helper.applyStyle(this.el,'flexWrap','wrap');\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[col],[col.lg],[col.md],[col.sm]'\n})\nexport class ColDirective implements OnInit,OnDestroy,OnChanges {\n\n  @Input('col') col=''; //0-100%, fill\n  @Input('col.lg') colLg='';\n  @Input('col.md') colMd='';\n  @Input('col.sm') colSm='';\n\n  observer;\n\n  constructor(private el:ElementRef, private helper:HelperService) { }\n\n  ngOnInit(){\n    this.helper.applyStyle(this.el,'overflow','auto');\n    this.helper.applyStyle(this.el,'boxSizing','border-box');\n\n    //@ts-ignore\n    this.observer = new ResizeObserver((entries)=>{\n      let width = entries[0].contentRect.width;\n      this.apply(width);\n    });\n\n    //attach resize observer to body element\n    let bodyEle = document.getElementsByTagName('body') ? document.getElementsByTagName('body')[0] : null;\n    if(bodyEle && this.observer){\n      this.observer.observe(bodyEle);\n    }\n\n  }\n\n  ngOnChanges(changes:any){\n    if(changes.col || changes.colLg || changes.colMd || changes.colSm){\n      window ? this.apply(window.innerWidth) : null;\n    }\n  }\n\n  ngOnDestroy(){\n    try{\n      this.observer?.unObserve(this.el.nativeElement);\n    }catch(e){}\n    \n  }\n\n  apply(width:number){\n    let styleToApply = '';\n    if(width <= 600 && this.colSm){\n      styleToApply = this.colSm ? this.colSm : this.colMd ? this.colMd : this.colLg ? this.colLg : this.col;\n    }else if(width <= 959 && this.colSm){\n      styleToApply = this.colMd ? this.colMd : this.colLg ? this.colLg : this.col;\n    }else{\n      styleToApply =  this.colLg ? this.colLg : this.col;\n    }\n\n    if(styleToApply){\n      if(styleToApply.toLocaleLowerCase() == 'fill'){\n        this.helper.applyStyle(this.el,'flex','1 1 0');\n      }else if(styleToApply.includes('%')){\n        this.helper.applyStyle(this.el,'flex',`0 0 ${styleToApply}`);\n      }else{\n        console.warn(\"Invalid col val, should be b/w 0 amd 100% (with %) or fill\");\n        this.helper.applyStyle(this.el,'flex',`0 0 auto`);\n      }\n    }else{\n      this.helper.applyStyle(this.el,'flex',`0 0 auto`);\n    }\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[align],[align.x],[align.y]'\n})\nexport class AlignDirective implements OnChanges {\n\n  @Input('align') align = '';\n  @Input('align.x') alignX = '';\n  @Input('align.y') alignY = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.align || changes.alignX || changes.alignY){\n      this.apply();\n    }\n  }\n\n  apply(){\n    let alignVal = this.align ? this.align.toLowerCase() : '';\n    if(alignVal == 'topleft'){\n      this.alignX = 'left';\n      this.alignY = 'top';\n    } else if(alignVal == 'topcenter'){\n      this.alignX = 'center';\n      this.alignY = 'top';\n    }else if(alignVal == 'topright'){\n      this.alignX = 'right';\n      this.alignY = 'top';\n    }else if(alignVal == 'centerleft'){\n      this.alignX = 'left';\n      this.alignY = 'center';\n    } else if(alignVal == 'centercenter'){\n      this.alignX = 'center';\n      this.alignY = 'center';\n    }else if(alignVal == 'centerright'){\n      this.alignX = 'right';\n      this.alignY = 'center';\n    }else if(alignVal == 'bottomleft'){\n      this.alignX = 'left';\n      this.alignY = 'bottom';\n    } else if(alignVal == 'bottomcenter'){\n      this.alignX = 'center';\n      this.alignY = 'bottom';\n    }else if(alignVal == 'bottomright'){\n      this.alignX = 'right';\n      this.alignY = 'bottom';\n    }\n\n    if(this.alignX){\n      let jc = this.alignX == 'left' ? 'flex-start' : this.alignX; //justify contents\n      jc = this.alignX == 'right' ? 'flex-end' : this.alignX;\n      this.helper.applyStyle(this.el,'textAlign',this.alignX);\n      this.helper.applyStyle(this.el,'justifyContent',jc);\n\n    }\n\n    if(this.alignY){\n      let ai = this.alignY == 'top' ? 'flex-start' : this.alignY; //align items\n      ai = this.alignX == 'bottom' ? 'flex-end' : this.alignY;\n\n      this.helper.applyStyle(this.el,'display','flex');\n      this.helper.applyStyle(this.el,'alignItems',ai);\n\n    }\n\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[ngwBtn]'\n})\nexport class NgwBtnDirective implements OnChanges {\n\n  @Input('ngwBtn') type = '';\n  @Input ('color') color = '';\n\n  themeColor:any;\n  themeColorText:any;\n\n  constructor(private el:ElementRef, private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.type || changes.color){\n      this.apply();\n    }\n  }\n\n  apply(){\n    this.themeColor = this.helper.sanitizeThemeColor(this.color);\n    this.themeColorText = this.helper.sanitizeThemeColor(this.color) == 'default' ? 'default-contrast' : this.helper.sanitizeThemeColor(this.color);\n    this.type = this.type ? this.type.toLowerCase() : 'default';\n\n    let classList = this.el.nativeElement.classList;\n    classList.add('ngw-btn');\n\n    let textColorClass = `ngw-text-color-${this.themeColor}-contrast`;\n    let themeTextColorClass = `ngw-text-color-${this.themeColorText}`;\n    let bgColorClass = `ngw-bg-color-${this.themeColor}`;\n    let hoverBgColorClass = `ngw-bg-hover-color-${this.themeColor}-400`;\n    let borderColorClass = `ngw-border-color-${this.themeColor}-600`;\n    let hoverBorderColorClass = `ngw-border-hover-color-${this.themeColor}-600`;\n    let hoverLightBgColorClass = `ngw-bg-hover-color-${this.themeColor}-50`;\n\n    if(this.type == 'outline'){\n      classList.add('ngw-btn-outline');\n      classList.add('ngw-text-button');\n      classList.add(borderColorClass);\n      classList.add(themeTextColorClass);\n      classList.add(hoverLightBgColorClass);\n\n    }else if(this.type == 'flat'){\n      classList.add('ngw-btn-flat');\n      classList.add('ngw-text-button');\n      classList.add(textColorClass);\n      classList.add(borderColorClass);\n      classList.add(bgColorClass);\n      classList.add(hoverBgColorClass);\n\n    }else if(this.type == 'raised'){\n      classList.add('ngw-btn-raised');\n      classList.add('ngw-text-button');\n      classList.add(textColorClass);\n      classList.add(borderColorClass);\n      classList.add(bgColorClass);\n      classList.add(hoverBgColorClass);\n\n    }else if(this.type == 'icon'){\n      classList.add('ngw-btn-icon');\n      classList.add('ngw-text-button');\n      classList.add(themeTextColorClass);\n      classList.add(hoverBorderColorClass);\n      classList.add(hoverLightBgColorClass);\n\n    }else if(this.type == 'link'){\n      classList.add('ngw-btn-link');\n      classList.add('ngw-text-color-primary');\n\n    }else{\n      classList.add('ngw-text-button');\n      classList.add(themeTextColorClass);\n      classList.add(hoverLightBgColorClass);\n\n    }\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[ngwFormControl]'\n})\nexport class NgwFormControlDirective implements OnChanges {\n\n  @Input('color') color='';\n\n  constructor(private el:ElementRef,private helper:HelperService) { \n    this.el.nativeElement.classList.add(\"ngw-form-control\");\n  }\n\n  ngOnChanges(changes:any){\n    if(changes.color){\n      this.apply();\n    }\n  }\n\n  apply(){\n    this.helper.themeColors.map((c)=>{\n      this.el.nativeElement.classList.remove(`ngw-border-color-${c}-600`); //remove any theme class that might have been added\n    });\n    let sanitizedColor  = this.helper.sanitizeThemeColor(this.color);\n    this.el.nativeElement.classList.add(`ngw-border-color-${sanitizedColor}-600`);\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[ngwTypo]'\n})\nexport class NgwTypoDirective implements OnChanges {\n\n  @Input('ngwTypo') type = ''; //headline,title,subheading-2,subheading-1,caption\n  @Input('muted') muted;\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes){\n    if(changes.type || changes.muted){\n      this.apply();\n    }\n  }\n\n  apply(){\n    let isMuted = this.muted !== undefined && this.muted.toString().toLowerCase() == 'true' ? true : false;\n    if(isMuted){\n      this.el.nativeElement.classList.add(`ngw-text-muted`);\n    }else{\n      this.el.nativeElement.classList.remove(`ngw-text-muted`);\n    }\n\n    this.el.nativeElement.classList.add(`ngw-text-${this.type.toLowerCase()}`);\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { BgColorDirective } from './directive/regular/bg-color.directive';\nimport { BorderDirective } from './directive/regular/border.directive';\nimport { EllipsisDirective } from './directive/regular/ellipsis.directive';\nimport { FitDirective } from './directive/regular/fit.directive';\nimport { FontSizeDirective } from './directive/regular/font-size.directive';\nimport { FontWeightDirective } from './directive/regular/font-weight.directive';\nimport { GradientBgColorDirective } from './directive/regular/gradient-bg-color.directive';\nimport { HeightDirective } from './directive/regular/height.directive';\nimport { MarginDirective } from './directive/regular/margin.directive';\nimport { PaddingDirective } from './directive/regular/padding.directive';\nimport { PositionDirective } from './directive/regular/position.directive';\nimport { RadiusDirective } from './directive/regular/radius.directive';\nimport { ShadowDirective } from './directive/regular/shadow.directive';\nimport { TextColorDirective } from './directive/regular/text-color.directive';\nimport { WidthDirective } from './directive/regular/width.directive';\nimport { BgColorHoverDirective } from './directive/hover/bg-color.hover.directive';\nimport { BorderHoverDirective } from './directive/hover/border.hover.directive';\nimport { FontSizeHoverDirective } from './directive/hover/font-size.hover.directive';\nimport { FontWeightHoverDirective } from './directive/hover/font-weight.hover.directive';\nimport { HeightHoverDirective } from './directive/hover/height.hover.directive';\nimport { MarginHoverDirective } from './directive/hover/margin.hover.directive';\nimport { PaddingHoverDirective } from './directive/hover/padding.hover.directive';\nimport { RadiusHoverDirective } from './directive/hover/radius.hover.directive';\nimport { ShadowHoverDirective } from './directive/hover/shadow.hover.directive';\nimport { TextColorHoverDirective } from './directive/hover/text-color.hover.directive';\nimport { WidthHoverDirective } from './directive/hover/width.hover.directive';\nimport { RowDirective } from './layouts/row.directive';\nimport { ColDirective } from './layouts/col.directive';\nimport { AlignDirective } from './layouts/align.directive';\nimport { NgwBtnDirective } from './elements/ngw-btn.directive';\nimport { NgwFormControlDirective } from './elements/ngw-form-control.directive';\nimport { NgwTypoDirective } from './elements/ngw-typo.directive';\nimport { HelperService } from './services/helper.service';\n\n\nlet componentsList = [\n  BgColorDirective,\n  BorderDirective,\n  EllipsisDirective,\n  FitDirective,\n  FontSizeDirective,\n  FontWeightDirective,\n  GradientBgColorDirective,\n  HeightDirective,\n  MarginDirective,\n  PaddingDirective,\n  PositionDirective,\n  RadiusDirective,\n  ShadowDirective,\n  TextColorDirective,\n  WidthDirective,\n  BgColorHoverDirective,\n  BorderHoverDirective,\n  FontSizeHoverDirective,\n  FontWeightHoverDirective,\n  HeightHoverDirective,\n  MarginHoverDirective,\n  PaddingHoverDirective,\n  RadiusHoverDirective,\n  ShadowHoverDirective,\n  TextColorHoverDirective,\n  WidthHoverDirective,\n  RowDirective,\n  ColDirective,\n  AlignDirective,\n  NgwBtnDirective,\n  NgwFormControlDirective,\n  NgwTypoDirective\n];\n\n@NgModule({\n  declarations: componentsList,\n  imports: [],\n  providers:[\n    HelperService\n  ],\n  exports:componentsList\n})\nexport class NgwCoreModule { \n\n  private static configObj = {\n    \"darkMode\":false,\n    \"colors\":{\n      \"default\" :{\n        \"50\":\"#f0f0f0\",\n        \"100\":\"#fafafa\",\n        \"200\":\"#f5f5f5\",\n        \"300\":\"#f0f0f0\",\n        \"400\":\"#dedede\",\n        \"500\":\"#ffffff\",\n        \"600\":\"#979797\",\n        \"700\":\"#818181\",\n        \"800\":\"#606060\",\n        \"900\":\"#3c3c3c\",\n        \"contrast\":\"#3c3c3c\"\n      },\n      \"primary\" :{\n        \"50\":\"#efe5fd\",\n        \"100\":\"#d4bff9\",\n        \"200\":\"#b794f6\",\n        \"300\":\"#9965f4\",\n        \"400\":\"#7e3ff2\",\n        \"500\":\"#6002ee\",\n        \"600\":\"#5300e8\",\n        \"700\":\"#3d00e0\",\n        \"800\":\"#1d00db\",\n        \"900\":\"#0000d6\",\n        \"contrast\":\"#fff\"\n      },\n      \"secondary\" :{\n        \"50\":\"#ffe5ed\",\n        \"100\":\"#ffbdd3\",\n        \"200\":\"#ff92b6\",\n        \"300\":\"#ff6598\",\n        \"400\":\"#ff4080\",\n        \"500\":\"#ff1869\",\n        \"600\":\"#ed1466\",\n        \"700\":\"#d70f61\",\n        \"800\":\"#c2075e\",\n        \"900\":\"#9d0058\",\n        \"contrast\":\"#fff\"\n      },\n      \"success\" :{\n        \"50\":\"#e7f5e7\",\n        \"100\":\"#c5e5c4\",\n        \"200\":\"#a0d49f\",\n        \"300\":\"#7ac478\",\n        \"400\":\"#5cb85c\",\n        \"500\":\"#3eab3e\",\n        \"600\":\"#359c35\",\n        \"700\":\"#298a2b\",\n        \"800\":\"#1c7a20\",\n        \"900\":\"#005b0b\",\n        \"contrast\":\"#fff\"\n      },\n      \"warning\" :{\n        \"50\":\"#fdf2e0\",\n        \"100\":\"#fadfb2\",\n        \"200\":\"#f6ca81\",\n        \"300\":\"#f3b44f\",\n        \"400\":\"#f1a42b\",\n        \"500\":\"#ef950f\",\n        \"600\":\"#eb8a0c\",\n        \"700\":\"#e57b08\",\n        \"800\":\"#df6c06\",\n        \"900\":\"#d55404\",\n        \"contrast\":\"#fff\"\n      },\n      \"error\" :{\n        \"50\":\"#ffebee\",\n        \"100\":\"#ffcdd2\",\n        \"200\":\"#ef9a9a\",\n        \"300\":\"#e57373\",\n        \"400\":\"#ef5350\",\n        \"500\":\"#f44336\",\n        \"600\":\"#e53935\",\n        \"700\":\"#d32f2f\",\n        \"800\":\"#c62828\",\n        \"900\":\"#b71b1c\",\n        \"contrast\":\"#fff\"\n      }\n    }\n  }\n\n  constructor(){\n    NgwCoreModule.setupNgw();\n  }\n\n  private static setupNgw(){\n    let css = `\n\n      h1,h2,h3,h4,h5,h6,p,div{\n        color :var(--ngw-default-contrast);\n      }\n\n      .ngw-text-muted{\n        color:var(--ngw-default-900);\n      }\n\n      .ngw-ellipsis{\n        white-space:nowrap;\n        overflow:hidden;\n        text-overflow:ellipsis;\n      }\n\n      /* Typography*/\n\n      .ngw-text-headline {\n          font-family: 'Roboto', sans-serif;\n          font-size: 24px;\n          font-weight: normal;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-title {\n          font-family: 'Roboto', sans-serif;\n          font-size: 20px;\n          font-weight: 500;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-subheading-2 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 16px;\n          font-weight: 500;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-subheading-1 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 15px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-body-2 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 500;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-body-1 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-body {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-caption {\n          font-family: 'Roboto', sans-serif;\n          font-size: 12px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-button {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 500;\n          letter-spacing: normal;\n          text-transform: uppercase;\n      }\n\n      .ngw-text-display-4 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 112px;\n          font-weight: 300;\n          letter-spacing: -0.7px;\n          margin: 0 0 56px;\n      }\n\n      .ngw-text-display-3 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 56px;\n          font-weight: 400;\n          letter-spacing: -0.28px;\n          margin: 0 0 64px;\n      }\n\n      .ngw-text-display-2 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 45px;\n          font-weight: 400;\n          letter-spacing: -0.07px;\n          margin: 0 0 64px;\n      }\n\n      .ngw-text-display-1 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 34px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 64px;\n      }\n\n\n      /**\n      *Form Control\n      **/\n\n      .ngw-form-control {\n          box-sizing: border-box;\n          width: 100%;\n          padding: 6px 12px;\n          font-size: 14px;\n          line-height: 1.42857143;\n          border-style: solid;\n          border-width: 1px;\n          border-color: var(--ngw-default-400);\n          border-radius: 4px;\n          transition: all ease-in-out 0.15s, ;\n      }\n\n      .ngw-form-control:focus {\n          border-color: var(--ngw-primary-200);\n          outline: 0;\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px var(--ngw-primary-200);\n      }\n\n      .ngw-form-control[disabled],\n      .ngw-form-control[readonly] {\n          background-color: #eeeeee;\n          opacity: 1;\n          cursor: not-allowed;\n      }\n\n\n      /**\n      *Button\n      **/\n\n      .ngw-btn {\n          text-align: center;\n          white-space: nowrap;\n          vertical-align: middle;\n          touch-action: manipulation;\n          cursor: pointer;\n          background-color: transparent;\n          background-image: none;\n          user-select: none;\n          text-decoration: none;\n          outline: none;\n          padding: 6px 12px;\n          line-height: 1.42857143;\n          border-radius: 4px;\n          border: none;\n          justify-content: center;\n          display: inline-flex;\n          align-items: center;\n          transition: opacity 200ms cubic-bezier(0.35, 0, 0.25, 1), background-color 200ms cubic-bezier(0.35, 0, 0.25, 1);\n      }\n\n      .ngw-btn.disabled,\n      .ngw-btn[disabled] {\n          cursor: not-allowed;\n          filter: alpha(opacity=65);\n          opacity: 0.65;\n          box-shadow: none;\n      }\n\n      .ngw-btn-outline {\n          border-width: 1px;\n          border-style: solid;\n      }\n\n      .ngw-btn-flat {\n          border-width: 1px;\n          border-style: solid;\n      }\n\n      .ngw-btn-raised {\n          border-width: 1px;\n          border-style: solid;\n          box-shadow: 0 2px 1px -1px rgb(0 0 0 /20%), 0 1px 1px 0 rgb(0 0 0 /14%), 0 1px 3px 0 rgb(0 0 0 /12%);\n      }\n\n      .ngw-btn-icon {\n          padding: 0;\n          min-width: 0;\n          width: 40px;\n          height: 40px;\n          flex-shrink: 0;\n          line-height: 40px;\n          border-radius: 50%;\n      }\n\n      .ngw-btn-link {\n          margin: inherit;\n          padding: inherit;\n          text-transform: none;\n          display: inline-block;\n          -webkit-appearance: button;\n          cursor: pointer;\n          user-select: none;\n          border-radius: 0;\n          background-color: transparent;\n          box-shadow: none;\n          border-color: transparent;\n      }\n\n      .ngw-btn-link:hover {\n          text-decoration: underline;\n      }\n\n\n    `;\n    let head = document.head || document.getElementsByTagName('head')[0];\n    let style = document.createElement(\"style\");\n    head.appendChild(style);\n    style.appendChild(document.createTextNode(css));\n\n    let colors = NgwCoreModule.configObj.colors;\n    let colorClassCss = '';\n    //for each key value pair, 500 is actual color, create css variable\n    for(let color in colors){\n      for(let colorCode in colors[color]){\n        document?.documentElement?.style.setProperty(`--ngw-${color}-${colorCode}`,colors[color][colorCode]);\n        colorClassCss += NgwCoreModule.getColorCss(color,colorCode);\n      }\n      //add 500 as defualt color\n      document?.documentElement?.style.setProperty(`--ngw-${color}`,colors[color][\"500\"]);\n      colorClassCss += NgwCoreModule.getColorCss(color,\"\");\n    }\n\n    style = document.createElement(\"style\");\n    head.appendChild(style);\n    style.appendChild(document.createTextNode(colorClassCss));\n  \n  }\n\n  static configure(config:any):ModuleWithProviders<NgwCoreModule>{\n    //check if config object is valid\n    let isValidConfigObj = config && config.colors && config.colors.default && config.colors.primary ? true : false;\n    NgwCoreModule.configObj = isValidConfigObj ? config : NgwCoreModule.configObj;\n    NgwCoreModule.setupNgw();\n    return {\n      ngModule:NgwCoreModule\n    }\n\n\n  }\n\n  private static getColorCss(color,colorCode){\n    let cssVarName = colorCode ? `--ngw-${color}-${colorCode}` : `--ngw-${color}`;\n    let className = colorCode ? `${color}-${colorCode}` : `${color}`;\n\n    return `\n        .ngw-text-color-${className},.ngw-text-hover-color-${className}:hover{\n          color:var(${cssVarName});\n        }\n        .ngw-bg-color-${className},.ngw-bg-hover-color-${className}:hover{\n          background-color:var(${cssVarName});\n        }\n        .ngw-border-color-${className},.ngw-border-hover-color-${className}:hover{\n          border-color:var(${cssVarName});\n        }\n    `;\n  }\n\n\n\n\n}\n"]}