{"version":3,"sources":["../../../projects/ngw-core/src/lib/services/helper.service.ts","../../../projects/ngw-core/src/lib/directive/regular/bg-color.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/border.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/ellipsis.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/fit.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/font-size.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/font-weight.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/gradient-bg-color.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/height.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/margin.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/padding.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/position.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/radius.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/shadow.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/text-color.directive.ts","../../../projects/ngw-core/src/lib/directive/regular/width.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/bg-color.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/border.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/font-size.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/font-weight.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/height.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/margin.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/padding.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/radius.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/shadow.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/text-color.hover.directive.ts","../../../projects/ngw-core/src/lib/directive/hover/width.hover.directive.ts","../../../projects/ngw-core/src/lib/layouts/row.directive.ts","../../../projects/ngw-core/src/lib/layouts/col.directive.ts","../../../projects/ngw-core/src/lib/layouts/align.directive.ts","../../../projects/ngw-core/src/lib/elements/ngw-btn.directive.ts","../../../projects/ngw-core/src/lib/elements/ngw-form-control.directive.ts","../../../projects/ngw-core/src/lib/elements/ngw-typo.directive.ts","../../../projects/ngw-core/src/lib/ngw-core.module.ts"],"names":["HelperService","this","themeColors","defaultColor","prototype","sanitizeThemeColor","color","indexOf","toLowerCase","sanitizeColor","colorLC","find","tc","applyStyle","el","propertyName","propertyValue","nativeElement","style","sanitizeAndApplyStyle","getStyleObject","props","styleObj","forEach","prop","i","setStyleObject","sanitizeShadowValue","shadow","Injectable","args","providedIn","BgColorDirective","helper","bgColor","ngOnChanges","changes","apply","Directive","selector","ElementRef","Input","BorderDirective","border","borderWidth","borderColor","borderStyle","EllipsisDirective","ngAfterViewInit","classList","add","FitDirective","fit","FontSizeDirective","fontSize","FontWeightDirective","fontWeight","GradientBgColorDirective","gradientBgColor","biValue","HeightDirective","height","MarginDirective","margin","marginTop","marginLeft","marginBottom","marginRight","marginX","marginY","PaddingDirective","padding","paddingTop","paddingLeft","paddingBottom","paddingRight","paddingX","paddingY","PositionDirective","position","RadiusDirective","radius","radiusTopLeft","radiusTopRight","radiusBottomLeft","radiusBottomRight","ShadowDirective","shdowToApply","TextColorDirective","textColor","WidthDirective","width","BgColorHoverDirective","hoverBgColor","propertiesToSet","backupValues","onMouseEnter","onMouseLeave","HostListener","BorderHoverDirective","hoverBorder","hoverBorderWidth","hoverBorderColor","hoverBorderStyle","FontSizeHoverDirective","hoverFontSize","FontWeightHoverDirective","propValue","HeightHoverDirective","MarginHoverDirective","hoverMargin","hoverMarginTop","hoverMarginLeft","hoverMarginBottom","hoverMarginRight","hoverMarginX","hoverMarginY","PaddingHoverDirective","hoverpadding","hoverpaddingTop","hoverpaddingLeft","hoverpaddingBottom","hoverpaddingRight","hoverpaddingX","hoverpaddingY","RadiusHoverDirective","hoverRadius","hoverRadiusTopLeft","hoverRadiusTopRight","hoverRadiusBottomLeft","hoverRadiusBottomRight","ShadowHoverDirective","TextColorHoverDirective","WidthHoverDirective","RowDirective","ColDirective","col","colLg","colMd","colSm","ngOnInit","_this","observer","ResizeObserver","entries","contentRect","bodyEle","document","getElementsByTagName","observe","window","innerWidth","ngOnDestroy","unObserve","styleToApply","toLocaleLowerCase","includes","console","warn","AlignDirective","align","alignX","alignY","alignVal","jc","ai","NgwBtnDirective","type","themeColor","themeColorText","textColorClass","themeTextColorClass","bgColorClass","hoverBgColorClass","borderColorClass","hoverBorderColorClass","hoverLightBgColorClass","NgwFormControlDirective","map","c","remove","sanitizedColor","NgwTypoDirective","muted","undefined","toString","componentsList","NgwCoreModule","setupNgw","head","createElement","appendChild","createTextNode","colors","configObj","colorClassCss","colorCode","_a","documentElement","setProperty","getColorCss","_b","configure","config","isValidConfigObj","default","primary","ngModule","cssVarName","className","darkMode","50","100","200","300","400","500","600","700","800","900","contrast","secondary","success","warning","error","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  themeColors = ['default','primary','secondary','sucess','error','warning'];\n  defaultColor = this.themeColors[0];\n  constructor() { }\n\n  /**\n   * checks if the given theme color is valid theme color or not, if invalid returns default theme color\n   * @param color theme color to be validated\n   * @returns returns a valid theme color, if invalid returns 'default'\n   */\n  sanitizeThemeColor(color:string):string{\n    return this.themeColors.indexOf(color.toLowerCase()) > -1 ? color.toLowerCase() : this.defaultColor;\n  }\n  /**\n   * returns the css color variable for the theme color(default,primary...) otherwise returns the same value\n   * @param color color to be sanitized\n   * @returns sanitized color\n   */\n  sanitizeColor(color:string):string{\n    let colorLC = color ? color.toLowerCase() : '';\n    let themeColor = this.themeColors.find((tc)=>{\n      return colorLC.indexOf(tc) >=0;\n    });\n    return themeColor ? `var(--ngw-${colorLC})` : colorLC;\n  }\n   /**\n   * Apply the given style poperty to given element. \n   * @param el Element for which style needs to be applied\n   * @param propertyName style porperty that needs to be set\n   * @param propertyValue style value that need to be set\n   */\n    applyStyle(el:ElementRef,propertyName:string,propertyValue:string){\n      el.nativeElement.style[propertyName] = propertyValue;\n    }\n  /**\n   * sanitize and Apply the given style poperty to given element. \n   * @param el Element for which style needs to be applied\n   * @param propertyName style porperty that needs to be set\n   * @param propertyValue style value that need to be set\n   */\n  sanitizeAndApplyStyle(el:ElementRef,propertyName:string,propertyValue:string){\n    el.nativeElement.style[propertyName] = this.sanitizeColor(propertyValue);\n  }\n\n  /**\n   * Extracts and returns CSS style obj for given css properties from the given HTML Element\n   * @param el Element from which styles needs to be extracted\n   * @param props Style properties to be extracted\n   * @returns style object for given style properties\n   */\n  getStyleObject(el:ElementRef,props:string[]){\n    let styleObj = {};\n    props.forEach((prop,i)=>{\n      styleObj[prop] = el.nativeElement.style[prop];\n    });\n    return styleObj;\n  }\n\n  /**\n   * sets the style of the HTML element with given style\n   * @param el HTML element for which style needs to be set\n   * @param props set of CSS style proeprties\n   * @param styleObj CSS styles with values to be set\n   */\n  setStyleObject(el:ElementRef,props:string[],styleObj:any){\n    props.forEach((prop,i)=>{\n      el.nativeElement.style[prop] = styleObj[prop];\n    });\n  }\n\n  sanitizeShadowValue(shadow:string):string{\n    let shdowToApply;\n    if(shadow ==\"1\"){\n      shdowToApply = '0 2px 1px -1px rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 1px 3px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"2\"){\n      shdowToApply = '0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"3\"){\n      shdowToApply = '0 3px 3px -2px rgb(0 0 0 / 20%), 0 3px 4px 0 rgb(0 0 0 / 14%), 0 1px 8px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"4\"){\n      shdowToApply = '0 2px 4px -1px rgb(0 0 0 / 20%), 0 4px 5px 0 rgb(0 0 0 / 14%), 0 1px 10px 0 rgb(0 0 0 / 12%)';\n    }else if(shadow ==\"5\"){\n      shdowToApply = '0 3px 5px -1px rgb(0 0 0 / 20%), 0 5px 8px 0 rgb(0 0 0 / 14%), 0 1px 14px 0 rgb(0 0 0 / 12%)';\n    }else{\n      shdowToApply = shadow\n    }\n    return shdowToApply;\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[bgColor]'\n})\nexport class BgColorDirective implements OnChanges {\n  @Input() bgColor='';\n  constructor(private el:ElementRef, private helper:HelperService ) { }\n  ngOnChanges(changes:any){\n    if(changes.bgColor){\n      this.apply();\n    }\n  }\n  apply(){\n    this.helper.sanitizeAndApplyStyle(this.el,'backgroundColor',this.bgColor);\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[border],[border.width],[border.color],[border.style]'\n})\nexport class BorderDirective implements OnChanges {\n  @Input('border') border = '';\n  @Input('border.width') borderWidth = '';\n  @Input('border.color') borderColor = '';\n  @Input('border.style') borderStyle = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  ngOnChanges(changes:any){\n    if(changes.border){\n      this.helper.applyStyle(this.el,'border',this.border);\n    }\n    if(changes.borderColor){\n      this.helper.sanitizeAndApplyStyle(this.el,'borderColor',this.borderColor);\n    }\n    if(changes.borderWidth){\n      this.helper.applyStyle(this.el,'borderWidth',this.borderWidth);\n    }\n    if(changes.borderStyle){\n      this.helper.applyStyle(this.el,'borderStyle',this.borderStyle);\n    }\n  }\n\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[ellipsis]'\n})\nexport class EllipsisDirective  implements AfterViewInit{\n\n  constructor(private el:ElementRef) { }\n  ngAfterViewInit(){\n    this.el.nativeElement.classList.add(\"ngw-ellipsis\");\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[fit]'\n})\nexport class FitDirective implements OnChanges {\n  @Input('fit') fit = '' //valid options : contain,cover,fill,none,scale-down\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  ngOnChanges(changes:any){\n    if(changes.fit){\n      this.helper.applyStyle(this.el,'objectFit',this.fit);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[fontSize]'\n})\nexport class FontSizeDirective implements OnChanges{\n\n  @Input('fontSize') fontSize = '';\n  \n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.fontSize){\n      this.helper.applyStyle(this.el,'fontSize',this.fontSize);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[fontWeight]'\n})\nexport class FontWeightDirective implements OnChanges{\n\n  @Input('fontWeight') fontWeight = '';\n  \n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.fontWeight){\n      this.helper.applyStyle(this.el,'fontWeight',this.fontWeight);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[gradientBgColor]'\n})\nexport class GradientBgColorDirective implements OnChanges {\n\n  @Input('gradientBgColor') gradientBgColor = '';\n  \n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.gradientBgColor){\n      this.gradientBgColor = this.helper.sanitizeThemeColor(this.gradientBgColor);\n      let biValue = `linear-gradient(to right, var(--ngw-${this.gradientBgColor}-600),var(--ngw-${this.gradientBgColor}-500),var(--ngw-${this.gradientBgColor}-400,rgba(91,33,182,0)))`;\n      this.helper.applyStyle(this.el,'backgroundImage',biValue);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[height]'\n})\nexport class HeightDirective implements OnChanges {\n  @Input('height') height = '';\n\n  constructor(private el:ElementRef, private helper:HelperService) { }\n  \n  ngOnChanges(changes:any) {\n    if(changes.height){\n      this.helper.applyStyle(this.el,'height',this.height);\n    }\n  }\n\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[margin],[margin.top],[margin.left],[margin.bottom],[margin.right],[margin.x],[margin.y]'\n})\nexport class MarginDirective implements OnChanges {\n\n  @Input('margin')        margin = '';\n  @Input('margin.top')    marginTop = '';\n  @Input('margin.left')   marginLeft = '';\n  @Input('margin.bottom') marginBottom = '';\n  @Input('margin.right')  marginRight = '';\n  @Input('margin.x')      marginX = '';\n  @Input('margin.y')      marginY = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n\n    if(changes.margin){\n      this.helper.applyStyle(this.el,'margin',this.margin);\n    }\n\n    if(changes.marginTop){\n      this.helper.applyStyle(this.el,'marginTop',this.marginTop);\n    }\n\n    if(changes.marginLeft){\n      this.helper.applyStyle(this.el,'marginLeft',this.marginLeft);\n    }\n\n    if(changes.marginBottom){\n      this.helper.applyStyle(this.el,'marginBottom',this.marginBottom);\n    }\n\n    if(changes.marginRight){\n      this.helper.applyStyle(this.el,'marginRight',this.marginRight);\n    }\n    if(changes.marginX){\n      this.helper.applyStyle(this.el,'marginLeft',this.marginX);\n      this.helper.applyStyle(this.el,'marginRight',this.marginX);\n    }\n    if(changes.marginY){\n      this.helper.applyStyle(this.el,'marginTop',this.marginY);\n      this.helper.applyStyle(this.el,'marginBottom',this.marginY);\n    }\n\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[padding],[padding.top],[padding.left],[padding.bottom],[padding.right],[padding.x],[padding.y]'\n})\nexport class PaddingDirective implements OnChanges {\n\n  @Input('padding')        padding = '';\n  @Input('padding.top')    paddingTop = '';\n  @Input('padding.left')   paddingLeft = '';\n  @Input('padding.bottom') paddingBottom = '';\n  @Input('padding.right')  paddingRight = '';\n  @Input('padding.x')      paddingX = '';\n  @Input('padding.y')      paddingY = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n\n    if(changes.padding){\n      this.helper.applyStyle(this.el,'padding',this.padding);\n    }\n\n    if(changes.paddingTop){\n      this.helper.applyStyle(this.el,'paddingTop',this.paddingTop);\n    }\n\n    if(changes.paddingLeft){\n      this.helper.applyStyle(this.el,'paddingLeft',this.paddingLeft);\n    }\n\n    if(changes.paddingBottom){\n      this.helper.applyStyle(this.el,'paddingBottom',this.paddingBottom);\n    }\n\n    if(changes.paddingRight){\n      this.helper.applyStyle(this.el,'paddingRight',this.paddingRight);\n    }\n    if(changes.paddingX){\n      this.helper.applyStyle(this.el,'paddingLeft',this.paddingX);\n      this.helper.applyStyle(this.el,'paddingRight',this.paddingX);\n    }\n    if(changes.paddingY){\n      this.helper.applyStyle(this.el,'paddingTop',this.paddingY);\n      this.helper.applyStyle(this.el,'paddingBottom',this.paddingY);\n    }\n\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[position]'\n})\nexport class PositionDirective implements OnChanges {\n  @Input('position') position = '';\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  ngOnChanges(changes:any){\n    if(changes.position){\n      this.helper.applyStyle(this.el,'position',this.position);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[radius],[radius.topLeft],[radius.topRadius],[radius.bottomLeft],[radius.bottomRight]'\n})\nexport class RadiusDirective implements OnChanges {\n  @Input('radius') radius = '';\n  @Input('radius.topLeft') radiusTopLeft = '';\n  @Input('radius.topRight') radiusTopRight = '';\n  @Input('radius.bottomLeft') radiusBottomLeft = '';\n  @Input('radius.bottomRight') radiusBottomRight = '';\n  \n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n  \n  ngOnChanges(changes:any){\n\n    changes.radius            ? this.helper.applyStyle(this.el,'borderRadius',this.radius) : '';\n    changes.radiusTopLeft     ? this.helper.applyStyle(this.el,'borderTopLeftRadius',this.radiusTopLeft) : '';\n    changes.radiusTopRight    ? this.helper.applyStyle(this.el,'borderTopRightRadius',this.radiusTopRight) : '';\n    changes.radiusBottomLeft  ? this.helper.applyStyle(this.el,'borderBottomLeftRadius',this.radiusBottomLeft) : '';\n    changes.radiusBottomRight ? this.helper.applyStyle(this.el,'borderBottomRightRadius',this.radiusBottomRight) : '';\n\n\n  }\n\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[shadow]'\n})\nexport class ShadowDirective implements OnChanges {\n  @Input('shadow') shadow = '';\n  \n  constructor(private el:ElementRef, private helper:HelperService) { }\n  \n  ngOnChanges(changes:any){\n    if(changes.shadow){\n     let shdowToApply = this.helper.sanitizeShadowValue(this.shadow);\n     this.helper.applyStyle(this.el,'boxShadow',shdowToApply);\n    }\n   \n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[textColor]'\n})\nexport class TextColorDirective implements OnChanges {\n  @Input('textColor') textColor = '';\n  \n  constructor(private el:ElementRef, private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    changes.textColor ? this.helper.sanitizeAndApplyStyle(this.el,'color',this.textColor) : '';\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[width]'\n})\nexport class WidthDirective implements OnChanges {\n  \n  @Input('width') width;\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    changes.width ? this.helper.applyStyle(this.el,'width',this.width) : '';\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.bgColor]'\n})\nexport class BgColorHoverDirective {\n\n  @Input('hover.bgColor') hoverBgColor = '';\n  propertiesToSet:string[] = ['backgroundColor'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.hoverBgColor){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.sanitizeAndApplyStyle(this.el,'backgroundColor',this.hoverBgColor);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.border],[hover.border.width],[hover.border.color],[hover.border.style]'\n})\nexport class BorderHoverDirective {\n\n  @Input('hover.border') hoverBorder = '';\n  @Input('hover.border.width') hoverBorderWidth = '';\n  @Input('hover.border.color') hoverBorderColor = '';\n  @Input('hover.border.style') hoverBorderStyle = '';\n\n  propertiesToSet:string[] = ['border','borderWidth','borderColor','borderStyle'];\n  backupValues:any = {}\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n    this.hoverBorder ? this.helper.applyStyle(this.el,'border',this.hoverBorder):'';\n    this.hoverBorderWidth ? this.helper.applyStyle(this.el,'borderWidth',this.hoverBorderWidth):'';\n    this.hoverBorderColor ? this.helper.sanitizeAndApplyStyle(this.el,'borderColor',this.hoverBorderColor):'';\n    this.hoverBorderStyle ? this.helper.applyStyle(this.el,'borderStyle',this.hoverBorderStyle):'';\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.fontSize]'\n})\nexport class FontSizeHoverDirective {\n\n  \n  @Input('hover.fontSize') hoverFontSize = '';\n  propertiesToSet:string[] = ['fontSize'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.hoverFontSize){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverFontSize);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.fontWeight]'\n})\nexport class FontWeightHoverDirective {\n\n  @Input('hover.fontWeight') propValue = '';\n  propertiesToSet:string[] = ['fontWeight'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.height]'\n})\nexport class HeightHoverDirective {\n\n  @Input('hover.height') propValue = '';\n  propertiesToSet:string[] = ['height'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.margin],[hover.margin.top],[hover.margin.left],[hover.margin.bottom],[hover.margin.right],[hover.margin.x],[hover.margin.y]'\n})\nexport class MarginHoverDirective {\n\n  @Input('hover.margin') hoverMargin = ''; \n  @Input('hover.margin.top') hoverMarginTop = ''; \n  @Input('hover.margin.left') hoverMarginLeft = ''; \n  @Input('hover.margin.bottom') hoverMarginBottom = ''; \n  @Input('hover.margin.right') hoverMarginRight = ''; \n  @Input('hover.margin.x') hoverMarginX = ''; \n  @Input('hover.margin.y') hoverMarginY = ''; \n\n  propertiesToSet:string[] = ['margin','marginTop','marginLeft','marginBottom','marginRight'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n\n    if(this.hoverMarginX){\n      this.hoverMarginLeft = this.hoverMarginX;\n      this.hoverMarginRight = this.hoverMarginX;\n    }\n\n    if(this.hoverMarginY){\n      this.hoverMarginTop = this.hoverMarginY;\n      this.hoverMarginBottom = this.hoverMarginY;\n    }\n\n    this.hoverMargin ? this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverMargin) : '';\n    this.hoverMarginTop ? this.helper.applyStyle(this.el,this.propertiesToSet[1],this.hoverMarginTop) : '';\n    this.hoverMarginLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[2],this.hoverMarginLeft) : '';\n    this.hoverMarginBottom ? this.helper.applyStyle(this.el,this.propertiesToSet[3],this.hoverMarginBottom) : '';\n    this.hoverMarginRight ? this.helper.applyStyle(this.el,this.propertiesToSet[4],this.hoverMarginRight) : '';\n    \n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.padding],[hover.padding.top],[hover.padding.left],[hover.padding.bottom],[hover.padding.right],[hover.padding.x],[hover.padding.y]'\n})\nexport class PaddingHoverDirective {\n\n  @Input('hover.padding') hoverpadding = ''; \n  @Input('hover.padding.top') hoverpaddingTop = ''; \n  @Input('hover.padding.left') hoverpaddingLeft = ''; \n  @Input('hover.padding.bottom') hoverpaddingBottom = ''; \n  @Input('hover.padding.right') hoverpaddingRight = ''; \n  @Input('hover.padding.x') hoverpaddingX = ''; \n  @Input('hover.padding.y') hoverpaddingY = ''; \n\n  propertiesToSet:string[] = ['padding','paddingTop','paddingLeft','paddingBottom','paddingRight'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n\n    if(this.hoverpaddingX){\n      this.hoverpaddingLeft = this.hoverpaddingX;\n      this.hoverpaddingRight = this.hoverpaddingX;\n    }\n\n    if(this.hoverpaddingY){\n      this.hoverpaddingTop = this.hoverpaddingY;\n      this.hoverpaddingBottom = this.hoverpaddingY;\n    }\n\n    this.hoverpadding ? this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverpadding) : '';\n    this.hoverpaddingTop ? this.helper.applyStyle(this.el,this.propertiesToSet[1],this.hoverpaddingTop) : '';\n    this.hoverpaddingLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[2],this.hoverpaddingLeft) : '';\n    this.hoverpaddingBottom ? this.helper.applyStyle(this.el,this.propertiesToSet[3],this.hoverpaddingBottom) : '';\n    this.hoverpaddingRight ? this.helper.applyStyle(this.el,this.propertiesToSet[4],this.hoverpaddingRight) : '';\n    \n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.radius],[hover.radius.topLeft],[hover.radius.topRight],[hover.radius.bottomLeft],[hover.radius.bottomRight]'\n})\nexport class RadiusHoverDirective {\n\n  @Input('hover.radius') hoverRadius = '';\n  @Input('hover.radius.topLeft') hoverRadiusTopLeft = '';\n  @Input('hover.radius.topRight') hoverRadiusTopRight = '';\n  @Input('hover.radius.bottomLeft') hoverRadiusBottomLeft = '';\n  @Input('hover.radius.bottomRight') hoverRadiusBottomRight = '';\n\n  propertiesToSet:string[] = ['borderRadius','borderTopLeftRadius','borderTopRightRadius','borderBottomLeftRadius','borderBottomRightRadius'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n\n    this.hoverRadius ? this.helper.applyStyle(this.el,this.propertiesToSet[0],this.hoverRadius) : '';\n    this.hoverRadiusTopLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[1],this.hoverRadiusTopLeft) : '';\n    this.hoverRadiusTopRight ? this.helper.applyStyle(this.el,this.propertiesToSet[2],this.hoverRadiusTopRight) : '';\n    this.hoverRadiusBottomLeft ? this.helper.applyStyle(this.el,this.propertiesToSet[3],this.hoverRadiusBottomLeft) : '';\n    this.hoverRadiusBottomRight ? this.helper.applyStyle(this.el,this.propertiesToSet[4],this.hoverRadiusBottomRight) : '';\n    \n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.shadow]'\n})\nexport class ShadowHoverDirective {\n\n  @Input('hover.shadow') propValue = '';\n  propertiesToSet:string[] = ['boxShadow'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      \n      let shdowToApply = this.helper.sanitizeShadowValue(this.propValue);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],shdowToApply);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.textColor]'\n})\nexport class TextColorHoverDirective {\n\n  @Input('hover.textColor') propValue = '';\n  propertiesToSet:string[] = ['color'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.sanitizeAndApplyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive({\n  selector: '[hover.width]'\n})\nexport class WidthHoverDirective {\n\n  @Input('hover.width') propValue = '';\n  propertiesToSet:string[] = ['width'];\n  backupValues:any = {};\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  @HostListener('mouseenter')\n  onMouseEnter(){\n    if(this.propValue){\n      this.backupValues = this.helper.getStyleObject(this.el,this.propertiesToSet);\n      this.helper.applyStyle(this.el,this.propertiesToSet[0],this.propValue);\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(){\n    this.helper.setStyleObject(this.el,this.propertiesToSet,this.backupValues);\n  }\n\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[row]'\n})\nexport class RowDirective implements AfterViewInit {\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngAfterViewInit(){\n    this.helper.applyStyle(this.el,'display','flex');\n    this.helper.applyStyle(this.el,'flexDirection','row');\n    this.helper.applyStyle(this.el,'flexWrap','wrap');\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[col],[col.lg],[col.md],[col.sm]'\n})\nexport class ColDirective implements OnInit,OnDestroy,OnChanges {\n\n  @Input('col') col=''; //0-100%, fill\n  @Input('col.lg') colLg='';\n  @Input('col.md') colMd='';\n  @Input('col.sm') colSm='';\n\n  observer;\n\n  constructor(private el:ElementRef, private helper:HelperService) { }\n\n  ngOnInit(){\n    this.helper.applyStyle(this.el,'overflow','auto');\n    this.helper.applyStyle(this.el,'boxSizing','border-box');\n\n    //@ts-ignore\n    this.observer = new ResizeObserver((entries)=>{\n      let width = entries[0].contentRect.width;\n      this.apply(width);\n    });\n\n    //attach resize observer to body element\n    let bodyEle = document.getElementsByTagName('body') ? document.getElementsByTagName('body')[0] : null;\n    if(bodyEle && this.observer){\n      this.observer.observe(bodyEle);\n    }\n\n  }\n\n  ngOnChanges(changes:any){\n    if(changes.col || changes.colLg || changes.colMd || changes.colSm){\n      window ? this.apply(window.innerWidth) : null;\n    }\n  }\n\n  ngOnDestroy(){\n    this.observer.unObserve(this.el.nativeElement);\n  }\n\n  apply(width:number){\n    let styleToApply = '';\n    if(width <= 600 && this.colSm){\n      styleToApply = this.colSm ? this.colSm : this.colMd ? this.colMd : this.colLg ? this.colLg : this.col;\n    }else if(width <= 959 && this.colSm){\n      styleToApply = this.colMd ? this.colMd : this.colLg ? this.colLg : this.col;\n    }else{\n      styleToApply =  this.colLg ? this.colLg : this.col;\n    }\n\n    if(styleToApply){\n      if(styleToApply.toLocaleLowerCase() == 'fill'){\n        this.helper.applyStyle(this.el,'flex','1 1 0');\n      }else if(styleToApply.includes('%')){\n        this.helper.applyStyle(this.el,'flex',`0 0 ${styleToApply}`);\n      }else{\n        console.warn(\"Invalid col val, should be b/w 0 amd 100% (with %) or fill\");\n        this.helper.applyStyle(this.el,'flex',`0 0 auto`);\n      }\n    }else{\n      this.helper.applyStyle(this.el,'flex',`0 0 auto`);\n    }\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[align],[align.x],[align.y]'\n})\nexport class AlignDirective implements OnChanges {\n\n  @Input('align') align = '';\n  @Input('align.x') alignX = '';\n  @Input('align.y') alignY = '';\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.align || changes.alignX || changes.alignY){\n      this.apply();\n    }\n  }\n\n  apply(){\n    let alignVal = this.align ? this.align.toLowerCase() : '';\n    if(alignVal == 'topleft'){\n      this.alignX = 'left';\n      this.alignY = 'top';\n    } else if(alignVal == 'topcenter'){\n      this.alignX = 'center';\n      this.alignY = 'top';\n    }else if(alignVal == 'topright'){\n      this.alignX = 'right';\n      this.alignY = 'top';\n    }else if(alignVal == 'centerleft'){\n      this.alignX = 'left';\n      this.alignY = 'center';\n    } else if(alignVal == 'centercenter'){\n      this.alignX = 'center';\n      this.alignY = 'center';\n    }else if(alignVal == 'centerright'){\n      this.alignX = 'right';\n      this.alignY = 'center';\n    }else if(alignVal == 'bottomleft'){\n      this.alignX = 'left';\n      this.alignY = 'bottom';\n    } else if(alignVal == 'bottomcenter'){\n      this.alignX = 'center';\n      this.alignY = 'bottom';\n    }else if(alignVal == 'bottomright'){\n      this.alignX = 'right';\n      this.alignY = 'bottom';\n    }\n\n    if(this.alignX){\n      let jc = this.alignX == 'left' ? 'flex-start' : this.alignX; //justify contents\n      jc = this.alignX == 'right' ? 'flex-end' : this.alignX;\n      this.helper.applyStyle(this.el,'textAlign',this.alignX);\n      this.helper.applyStyle(this.el,'justifyContent',jc);\n\n    }\n\n    if(this.alignY){\n      let ai = this.alignY == 'top' ? 'flex-start' : this.alignX; //align items\n      ai = this.alignX == 'bottom' ? 'flex-end' : this.alignX;\n\n      this.helper.applyStyle(this.el,'display','flex');\n      this.helper.applyStyle(this.el,'alignItems',ai);\n\n    }\n\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[ngwBtn]'\n})\nexport class NgwBtnDirective implements OnChanges {\n\n  @Input('ngwBtn') type = '';\n  @Input ('color') color = '';\n\n  themeColor:any;\n  themeColorText:any;\n\n  constructor(private el:ElementRef, private helper:HelperService) { }\n\n  ngOnChanges(changes:any){\n    if(changes.type || changes.color){\n      this.apply();\n    }\n  }\n\n  apply(){\n    this.themeColor = this.helper.sanitizeThemeColor(this.color);\n    this.themeColorText = this.helper.sanitizeThemeColor(this.color) == 'default' ? 'default-contrast' : this.helper.sanitizeThemeColor(this.color);\n    this.type = this.type ? this.type.toLowerCase() : 'default';\n\n    let classList = this.el.nativeElement.classList;\n    classList.add('ngw-btn');\n\n    let textColorClass = `ngw-text-color-${this.themeColor}-contrast`;\n    let themeTextColorClass = `ngw-text-color-${this.themeColorText}`;\n    let bgColorClass = `ngw-bg-color-${this.themeColor}`;\n    let hoverBgColorClass = `ngw-bg-hover-color-${this.themeColor}-400`;\n    let borderColorClass = `ngw-border-color-${this.themeColor}-600`;\n    let hoverBorderColorClass = `ngw-border-hover-color-${this.themeColor}-600`;\n    let hoverLightBgColorClass = `ngw-bg-hover-color-${this.themeColor}-50`;\n\n    if(this.type == 'outline'){\n      classList.add('ngw-btn-outline');\n      classList.add('ngw-text-button');\n      classList.add(borderColorClass);\n      classList.add(themeTextColorClass);\n      classList.add(hoverLightBgColorClass);\n\n    }else if(this.type == 'flat'){\n      classList.add('ngw-btn-flat');\n      classList.add('ngw-text-button');\n      classList.add(textColorClass);\n      classList.add(borderColorClass);\n      classList.add(bgColorClass);\n      classList.add(hoverBgColorClass);\n\n    }else if(this.type == 'raised'){\n      classList.add('ngw-btn-raised');\n      classList.add('ngw-text-button');\n      classList.add(textColorClass);\n      classList.add(borderColorClass);\n      classList.add(bgColorClass);\n      classList.add(hoverBgColorClass);\n\n    }else if(this.type == 'icon'){\n      classList.add('ngw-btn-icon');\n      classList.add('ngw-text-button');\n      classList.add(themeTextColorClass);\n      classList.add(hoverBorderColorClass);\n      classList.add(hoverLightBgColorClass);\n\n    }else if(this.type == 'link'){\n      classList.add('ngw-btn-link');\n      classList.add('ngw-text-color-primary');\n\n    }else{\n      classList.add('ngw-text-button');\n      classList.add(themeTextColorClass);\n      classList.add(hoverLightBgColorClass);\n\n    }\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[ngwFormControl]'\n})\nexport class NgwFormControlDirective implements OnChanges {\n\n  @Input('color') color='';\n\n  constructor(private el:ElementRef,private helper:HelperService) { \n    this.el.nativeElement.classList.add(\"ngw-form-control\");\n  }\n\n  ngOnChanges(changes:any){\n    if(changes.color){\n      this.apply();\n    }\n  }\n\n  apply(){\n    this.helper.themeColors.map((c)=>{\n      this.el.nativeElement.classList.remove(`ngw-border-color-${c}-600`); //remove any theme class that might have been added\n    });\n    let sanitizedColor  = this.helper.sanitizeThemeColor(this.color);\n    this.el.nativeElement.classList.add(`ngw-border-color-${sanitizedColor}-600`);\n\n  }\n\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { HelperService } from '../services/helper.service';\n\n@Directive({\n  selector: '[ngwTypo]'\n})\nexport class NgwTypoDirective implements OnChanges {\n\n  @Input('ngwTypo') type = ''; //headline,title,subheading-2,subheading-1,caption\n  @Input('muted') muted;\n\n  constructor(private el:ElementRef,private helper:HelperService) { }\n\n  ngOnChanges(changes){\n    if(changes.type || changes.muted){\n      this.apply();\n    }\n  }\n\n  apply(){\n    let isMuted = this.muted !== undefined && this.muted.toString().toLowerCase() == 'true' ? true : false;\n    if(isMuted){\n      this.el.nativeElement.classList.add(`ngw-text-muted`);\n    }else{\n      this.el.nativeElement.classList.remove(`ngw-text-muted`);\n    }\n\n    this.el.nativeElement.classList.add(`ngw-text-${this.type.toLowerCase()}`);\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { BgColorDirective } from './directive/regular/bg-color.directive';\nimport { BorderDirective } from './directive/regular/border.directive';\nimport { EllipsisDirective } from './directive/regular/ellipsis.directive';\nimport { FitDirective } from './directive/regular/fit.directive';\nimport { FontSizeDirective } from './directive/regular/font-size.directive';\nimport { FontWeightDirective } from './directive/regular/font-weight.directive';\nimport { GradientBgColorDirective } from './directive/regular/gradient-bg-color.directive';\nimport { HeightDirective } from './directive/regular/height.directive';\nimport { MarginDirective } from './directive/regular/margin.directive';\nimport { PaddingDirective } from './directive/regular/padding.directive';\nimport { PositionDirective } from './directive/regular/position.directive';\nimport { RadiusDirective } from './directive/regular/radius.directive';\nimport { ShadowDirective } from './directive/regular/shadow.directive';\nimport { TextColorDirective } from './directive/regular/text-color.directive';\nimport { WidthDirective } from './directive/regular/width.directive';\nimport { BgColorHoverDirective } from './directive/hover/bg-color.hover.directive';\nimport { BorderHoverDirective } from './directive/hover/border.hover.directive';\nimport { FontSizeHoverDirective } from './directive/hover/font-size.hover.directive';\nimport { FontWeightHoverDirective } from './directive/hover/font-weight.hover.directive';\nimport { HeightHoverDirective } from './directive/hover/height.hover.directive';\nimport { MarginHoverDirective } from './directive/hover/margin.hover.directive';\nimport { PaddingHoverDirective } from './directive/hover/padding.hover.directive';\nimport { RadiusHoverDirective } from './directive/hover/radius.hover.directive';\nimport { ShadowHoverDirective } from './directive/hover/shadow.hover.directive';\nimport { TextColorHoverDirective } from './directive/hover/text-color.hover.directive';\nimport { WidthHoverDirective } from './directive/hover/width.hover.directive';\nimport { RowDirective } from './layouts/row.directive';\nimport { ColDirective } from './layouts/col.directive';\nimport { AlignDirective } from './layouts/align.directive';\nimport { NgwBtnDirective } from './elements/ngw-btn.directive';\nimport { NgwFormControlDirective } from './elements/ngw-form-control.directive';\nimport { NgwTypoDirective } from './elements/ngw-typo.directive';\n\n\nlet componentsList = [\n  BgColorDirective,\n  BorderDirective,\n  EllipsisDirective,\n  FitDirective,\n  FontSizeDirective,\n  FontWeightDirective,\n  GradientBgColorDirective,\n  HeightDirective,\n  MarginDirective,\n  PaddingDirective,\n  PositionDirective,\n  RadiusDirective,\n  ShadowDirective,\n  TextColorDirective,\n  WidthDirective,\n  BgColorHoverDirective,\n  BorderHoverDirective,\n  FontSizeHoverDirective,\n  FontWeightHoverDirective,\n  HeightHoverDirective,\n  MarginHoverDirective,\n  PaddingHoverDirective,\n  RadiusHoverDirective,\n  ShadowHoverDirective,\n  TextColorHoverDirective,\n  WidthHoverDirective,\n  RowDirective,\n  ColDirective,\n  AlignDirective,\n  NgwBtnDirective,\n  NgwFormControlDirective,\n  NgwTypoDirective\n];\n\n@NgModule({\n  declarations: componentsList,\n  imports: [],\n  exports:componentsList\n})\nexport class NgwCoreModule { \n\n  private static configObj = {\n    \"darkMode\":false,\n    \"colors\":{\n      \"default\" :{\n        \"50\":\"#f0f0f0\",\n        \"100\":\"#fafafa\",\n        \"200\":\"#f5f5f5\",\n        \"300\":\"#f0f0f0\",\n        \"400\":\"#dedede\",\n        \"500\":\"#ffffff\",\n        \"600\":\"#979797\",\n        \"700\":\"#818181\",\n        \"800\":\"#606060\",\n        \"900\":\"#3c3c3c\",\n        \"contrast\":\"#3c3c3c\"\n      },\n      \"primary\" :{\n        \"50\":\"#efe5fd\",\n        \"100\":\"#d4bff9\",\n        \"200\":\"#b794f6\",\n        \"300\":\"#9965f4\",\n        \"400\":\"#7e3ff2\",\n        \"500\":\"#6002ee\",\n        \"600\":\"#5300e8\",\n        \"700\":\"#3d00e0\",\n        \"800\":\"#1d00db\",\n        \"900\":\"#0000d6\",\n        \"contrast\":\"#fff\"\n      },\n      \"secondary\" :{\n        \"50\":\"#ffe5ed\",\n        \"100\":\"#ffbdd3\",\n        \"200\":\"#ff92b6\",\n        \"300\":\"#ff6598\",\n        \"400\":\"#ff4080\",\n        \"500\":\"#ff1869\",\n        \"600\":\"#ed1466\",\n        \"700\":\"#d70f61\",\n        \"800\":\"#c2075e\",\n        \"900\":\"#9d0058\",\n        \"contrast\":\"#fff\"\n      },\n      \"success\" :{\n        \"50\":\"#e7f5e7\",\n        \"100\":\"#c5e5c4\",\n        \"200\":\"#a0d49f\",\n        \"300\":\"#7ac478\",\n        \"400\":\"#5cb85c\",\n        \"500\":\"#3eab3e\",\n        \"600\":\"#359c35\",\n        \"700\":\"#298a2b\",\n        \"800\":\"#1c7a20\",\n        \"900\":\"#005b0b\",\n        \"contrast\":\"#fff\"\n      },\n      \"warning\" :{\n        \"50\":\"#fdf2e0\",\n        \"100\":\"#fadfb2\",\n        \"200\":\"#f6ca81\",\n        \"300\":\"#f3b44f\",\n        \"400\":\"#f1a42b\",\n        \"500\":\"#ef950f\",\n        \"600\":\"#eb8a0c\",\n        \"700\":\"#e57b08\",\n        \"800\":\"#df6c06\",\n        \"900\":\"#d55404\",\n        \"contrast\":\"#fff\"\n      },\n      \"error\" :{\n        \"50\":\"#ffebee\",\n        \"100\":\"#ffcdd2\",\n        \"200\":\"#ef9a9a\",\n        \"300\":\"#e57373\",\n        \"400\":\"#ef5350\",\n        \"500\":\"#f44336\",\n        \"600\":\"#e53935\",\n        \"700\":\"#d32f2f\",\n        \"800\":\"#c62828\",\n        \"900\":\"#b71b1c\",\n        \"contrast\":\"#fff\"\n      }\n    }\n  }\n\n  constructor(){\n    NgwCoreModule.setupNgw();\n  }\n\n  private static setupNgw(){\n    let css = `\n\n      h1,h2,h3,h4,h5,h6,p,div{\n        color :var(--ngw-default-contrast);\n      }\n\n      .ngw-text-muted{\n        color:var(--ngw-default-900);\n      }\n\n      .ngw-ellipsis{\n        white-space:nowrap;\n        overflow:hidden;\n        text-overflow:ellipsis;\n      }\n\n      /* Typography*/\n\n      .ngw-text-headline {\n          font-family: 'Roboto', sans-serif;\n          font-size: 24px;\n          font-weight: normal;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-title {\n          font-family: 'Roboto', sans-serif;\n          font-size: 20px;\n          font-weight: 500;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-subheading-2 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 16px;\n          font-weight: 500;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-subheading-1 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 15px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 16px;\n      }\n\n      .ngw-text-body-2 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 500;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-body-1 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-body {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-caption {\n          font-family: 'Roboto', sans-serif;\n          font-size: 12px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 12px;\n      }\n\n      .ngw-text-button {\n          font-family: 'Roboto', sans-serif;\n          font-size: 14px;\n          font-weight: 500;\n          letter-spacing: normal;\n          text-transform: uppercase;\n      }\n\n      .ngw-text-display-4 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 112px;\n          font-weight: 300;\n          letter-spacing: -0.7px;\n          margin: 0 0 56px;\n      }\n\n      .ngw-text-display-3 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 56px;\n          font-weight: 400;\n          letter-spacing: -0.28px;\n          margin: 0 0 64px;\n      }\n\n      .ngw-text-display-2 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 45px;\n          font-weight: 400;\n          letter-spacing: -0.07px;\n          margin: 0 0 64px;\n      }\n\n      .ngw-text-display-1 {\n          font-family: 'Roboto', sans-serif;\n          font-size: 34px;\n          font-weight: 400;\n          letter-spacing: normal;\n          margin: 0 0 64px;\n      }\n\n\n      /**\n      *Form Control\n      **/\n\n      .ngw-form-control {\n          box-sizing: border-box;\n          width: 100%;\n          padding: 6px 12px;\n          font-size: 14px;\n          line-height: 1.42857143;\n          border-style: solid;\n          border-width: 1px;\n          border-color: var(--ngw-default-400);\n          border-radius: 4px;\n          transition: all ease-in-out 0.15s, ;\n      }\n\n      .ngw-form-control:focus {\n          border-color: var(--ngw-primary-200);\n          outline: 0;\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px var(--ngw-primary-200);\n      }\n\n      .ngw-form-control[disabled],\n      .ngw-form-control[readonly] {\n          background-color: #eeeeee;\n          opacity: 1;\n          cursor: not-allowed;\n      }\n\n\n      /**\n      *Button\n      **/\n\n      .ngw-btn {\n          text-align: center;\n          white-space: nowrap;\n          vertical-align: middle;\n          touch-action: manipulation;\n          cursor: pointer;\n          background-color: transparent;\n          background-image: none;\n          user-select: none;\n          text-decoration: none;\n          outline: none;\n          padding: 6px 12px;\n          line-height: 1.42857143;\n          border-radius: 4px;\n          border: none;\n          justify-content: center;\n          display: inline-flex;\n          align-items: center;\n          transition: opacity 200ms cubic-bezier(0.35, 0, 0.25, 1), background-color 200ms cubic-bezier(0.35, 0, 0.25, 1);\n      }\n\n      .ngw-btn.disabled,\n      .ngw-btn[disabled] {\n          cursor: not-allowed;\n          filter: alpha(opacity=65);\n          opacity: 0.65;\n          box-shadow: none;\n      }\n\n      .ngw-btn-outline {\n          border-width: 1px;\n          border-style: solid;\n      }\n\n      .ngw-btn-flat {\n          border-width: 1px;\n          border-style: solid;\n      }\n\n      .ngw-btn-raised {\n          border-width: 1px;\n          border-style: solid;\n          box-shadow: 0 2px 1px -1px rgb(0 0 0 /20%), 0 1px 1px 0 rgb(0 0 0 /14%), 0 1px 3px 0 rgb(0 0 0 /12%);\n      }\n\n      .ngw-btn-icon {\n          padding: 0;\n          min-width: 0;\n          width: 40px;\n          height: 40px;\n          flex-shrink: 0;\n          line-height: 40px;\n          border-radius: 50%;\n      }\n\n      .ngw-btn-link {\n          margin: inherit;\n          padding: inherit;\n          text-transform: none;\n          display: inline-block;\n          -webkit-appearance: button;\n          cursor: pointer;\n          user-select: none;\n          border-radius: 0;\n          background-color: transparent;\n          box-shadow: none;\n          border-color: transparent;\n      }\n\n      .ngw-btn-link:hover {\n          text-decoration: underline;\n      }\n\n\n    `;\n    let head = document.head || document.getElementsByTagName('head')[0];\n    let style = document.createElement(\"style\");\n    head.appendChild(style);\n    style.appendChild(document.createTextNode(css));\n\n    let colors = NgwCoreModule.configObj.colors;\n    let colorClassCss = '';\n    //for each key value pair, 500 is actual color, create css variable\n    for(let color in colors){\n      for(let colorCode in colors[color]){\n        document?.documentElement?.style.setProperty(`--ngw-${color}-${colorCode}`,colors[color][colorCode]);\n        colorClassCss += NgwCoreModule.getColorCss(color,colorCode);\n      }\n      //add 500 as defualt color\n      document?.documentElement?.style.setProperty(`--ngw-${color}`,colors[color][\"500\"]);\n      colorClassCss += NgwCoreModule.getColorCss(color,\"\");\n    }\n\n    style = document.createElement(\"style\");\n    head.appendChild(style);\n    style.appendChild(document.createTextNode(colorClassCss));\n  \n  }\n\n  static configure(config:any):ModuleWithProviders<NgwCoreModule>{\n    //check if config object is valid\n    let isValidConfigObj = config && config.colors && config.colors.default && config.colors.primary ? true : false;\n    NgwCoreModule.configObj = isValidConfigObj ? config : NgwCoreModule.configObj;\n    NgwCoreModule.setupNgw();\n    return {\n      ngModule:NgwCoreModule\n    }\n\n\n  }\n\n  private static getColorCss(color,colorCode){\n    let cssVarName = colorCode ? `--ngw-${color}-${colorCode}` : `--ngw-${color}`;\n    let className = colorCode ? `${color}-${colorCode}` : `${color}`;\n\n    return `\n        .ngw-text-color-${className},.ngw-text-hover-color-${className}:hover{\n          color:var(${cssVarName});\n        }\n        .ngw-bg-color-${className},.ngw-bg-hover-color-${className}:hover{\n          background-color:var(${cssVarName});\n        }\n        .ngw-border-color-${className},.ngw-border-hover-color-${className}:hover{\n          background-color:var(${cssVarName});\n        }\n    `;\n  }\n\n\n\n\n}\n"]}